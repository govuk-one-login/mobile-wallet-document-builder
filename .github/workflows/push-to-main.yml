---
name: 'Deployment'

'on':
  workflow_dispatch:
  push:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  upload-s3-artifact-to-build:
    name: Validate & upload S3 artifact to build
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # pin@v3
        with:
          fetch-depth: '0'

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@f664fad9e12492edfc187a31f575537dfbb0ff63 # pin@v2
        with:
          version: 1.90.0
          use-installer: true

      - name: Set up AWS creds
        uses: aws-actions/configure-aws-credentials@b47578312673ae6fa5b5096b330d9fbac3d116df # pin@v4
        with:
          role-to-assume: ${{ secrets.GH_ACTIONS_ROLE_ARN }}
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # pin@v1

      - name: Install Cosign
        uses: sigstore/cosign-installer@main
        with:
          cosign-release: 'v2.5.2'

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: "${{ secrets.BUILD_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com"
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
          CONTAINER_SIGN_KMS_KEY: ${{ secrets.CONTAINER_SIGN_KMS_KEY }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA
          cosign sign --key awskms:///${CONTAINER_SIGN_KMS_KEY} $ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA

      - name: Update SAM template
        env:
          ECR_REGISTRY: "${{ secrets.BUILD_ACCOUNT_ID }}.dkr.ecr.eu-west-2.amazonaws.com"
          ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        run: |
          cd ${GITHUB_WORKSPACE}/deploy || exit 1
          sed -i "s|CONTAINER-IMAGE-PLACEHOLDER|$ECR_REGISTRY/$ECR_REPOSITORY:$GITHUB_SHA|" template.yaml

      - name: Sam Build & Validate
        run: |
          echo "SAM_CLI_TELEMETRY=0" >> $GITHUB_ENV
          cd ${GITHUB_WORKSPACE}/deploy || exit 1
          sam validate
          sam build --cached

      - name: Deploy SAM app
        uses: govuk-one-login/devplatform-upload-action@720ddb75fba8951db5a648ebb416eb233f1b6bc9 # pin@v3.9.3
        with:
          artifact-bucket-name: ${{ secrets.BUILD_ENV_ARTIFACT_BUCKET_NAME }}
          signing-profile-name: ${{ secrets.SIGNING_PROFILE_NAME }}
          working-directory: ./deploy/.aws-sam/build

  publish-package:
    runs-on: ubuntu-latest
    name: Publish package
    permissions:
      contents: write
      packages: write
    steps:
      - name: Check-out repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Build
        run: npm run build

      - name: Retrieve package version from package.json
        id: current_version
        run: |
          version=$(jq -r .version package.json)
          echo "Current version: $version"
          echo version=$version >> $GITHUB_OUTPUT

      - name: Check if package version has been bumped
        run: |
          git fetch --tags
          previous_version=$(git tag --sort=-v:refname | head -n 1 || echo "none")
          echo "Previous version: $previous_version"

          if [ "$previous_version" == ${{ steps.current_version.outputs.version }} ]; then
            echo "Version has not been bumped."
            exit 1
          else
            echo "Version been bumped."
            exit 0
          fi

      - name: Create and push tag
        run: |
          new_tag=v${{ steps.current_version.outputs.version }}
          git tag $new_tag
          git push origin $new_tag

      - name: Create GitHub Release
        uses: softprops/action-gh-release@de2c0eb89ae2a093876385947365aca7b0e5f844 #v0.1.15
        with:
          tag_name: v${{ steps.current_version.outputs.version }}
          draft: false
          prerelease: false
          generate_release_notes: true