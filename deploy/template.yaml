AWSTemplateFormatVersion: "2010-09-09"

Transform:
  - AWS::Serverless-2016-10-31
Description: >-
  Wallet Stub FE

Parameters:
  Environment:
    Description: "The environment type"
    Type: "String"
    Default: dev
    AllowedValues:
      - "dev"
      - "build"
      - "staging"
      # - "integration"
      # - "production"
  VpcStackName:
    Description: >
      The name of the stack that defines the VPC in which this container will
      run.
    Type: String
    Default: platform-vpc
  # BackendStackName:
  #   Description: >
  #     The name of the backend stack to depend on.  Is set to a default as not required for the higher envs.
  #   Type: String
  #   Default: backend-api
  ContainerPort:
    Description: >
      The port on which the container is running
    Type: Number
    Default: 8000

Resources:

 # ECS RESOURCES

  ECSSecurityGroupV2:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: >-
        DCA Front ECS Security Group permitting outbound
        to anywhere.
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: '-1'
      VpcId:
        Fn::ImportValue:
          !Sub "${DevPlatformVpcStackName}-VpcId"

  WalletFrontEndStubCluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ECSClusterV2"
        - Key: Product
          Value: "GOV.UK sign in"
        - Key: System
          Value: "DCA CRI"
        - Key: Environment
          Value: !Sub "${Environment}"

  DCAFrontEcsServiceV2:
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: !Ref DCAFrontEcsClusterV2
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: TRUE
          Rollback: TRUE
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: app
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref LoadBalancerListenerTargetGroupECSV2
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !GetAtt ECSSecurityGroupV2.GroupId
          Subnets:
            - Fn::ImportValue:
                !Sub "${DevPlatformVpcStackName}-ProtectedSubnetIdA"
            - Fn::ImportValue:
                !Sub "${DevPlatformVpcStackName}-ProtectedSubnetIdB"
            - Fn::ImportValue:
                !Sub "${DevPlatformVpcStackName}-ProtectedSubnetIdC"
      TaskDefinition: !Ref ECSServiceTaskDefinitionV2
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-ECSV2"
        - Key: Product
          Value: "GOV.UK sign in"
        - Key: System
          Value: "DCA CRI"
        - Key: Environment
          Value: !Sub "${Environment}"
    DependsOn:
      - LoadBalancerListenerV2

  ECSServiceTaskDefinitionV2:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: CONTAINER-IMAGE-PLACEHOLDER
          Name: app
          Environment:
            - Name: EXTERNAL_WEBSITE_HOST
              Value: !GetAtt ApiGwHttpEndpoint.ApiEndpoint
            - Name: OAUTH_ENABLED
              Value: !FindInMap [EnvironmentVariables, !Ref Environment, OAUTHENABLED ]
            - Name: APP_NAME
              Value: !FindInMap [ EnvironmentVariables, !Ref Environment, APPNAME ]
            - Name: SUPPORT_EMAIL
              Value: !FindInMap [ EnvironmentVariables, !Ref Environment, SUPPORTEMAIL ]
            - Name: PRIVACY_NOTICE_URL
              Value: !FindInMap [ EnvironmentVariables, !Ref Environment, PRIVACYNOTICEURL]
              # Feature Flags - end
            - Name: ENVIRONMENT
              Value: !Sub "${Environment}"
            - Name: PORT
              Value: !Ref ContainerPort
            - Name: FRONT_END_URL
              Value: !Sub
                - "https://${Url}"
                - Url: !Ref FrontCustomDomain
            - Name: FRONT_END_URL_ALTERNATE_SUBDOMAIN
              Value: !Sub
                - "https://${Url}"
                - Url: !Ref AppFrontCustomDomain
            - Name: API_URL
              Value: !Sub
                - "https://${Url}"
                - Url:
                    Fn::ImportValue:
                      !Sub "${BackendStackName}-apigateway-url"
            - Name: APP_STORE_URL
              Value: !FindInMap [EnvironmentVariables, !Ref Environment, APPSTOREURL ]
            - Name: MOBILE_APP_ID
              Value: !FindInMap [EnvironmentVariables, !Ref Environment, MOBILEAPPID ]
            - Name: PLAY_STORE_URL
              Value: !FindInMap [ EnvironmentVariables, !Ref Environment, PLAYSTOREURL ]
            - Name: ANDROID_APP_ID
              Value: !FindInMap [ EnvironmentVariables, !Ref Environment, ANDROIDAPPID ]
            - Name: ANDROID_FINGER_PRINT
              Value: !FindInMap [ EnvironmentVariables, !Ref Environment, ANDROIDFINGERPRINT ]
            - Name: UNIVERSAL_ANALYTICS_GTM_CONTAINER_ID
              Value: !FindInMap [ EnvironmentVariables, !Ref Environment, UNIVERSALANALYTICSGTMCONTAINERID ]
            - Name: GOOGLE_ANALYTICS_4_GTM_CONTAINER_ID
              Value: !FindInMap [ EnvironmentVariables, !Ref Environment, GOOGLEANALYTICS4GTMCONTAINERID ]
            - Name: X_GOVUK_SIGNIN_DCA_FEATURE_FLAG_20230725_GOOGLE_ANALYTICS_4_ENABLED
              Value: !FindInMap [ EnvironmentVariables, !Ref Environment, GA4ENABLED ]
            - Name: ANALYTICS_COOKIE_DOMAIN
              Value: !FindInMap [EnvironmentVariables, !Ref Environment, ANALYTICSCOOKIEDOMAIN ]
            - Name: SERVICE_COOKIE_DOMAIN
              Value: !FindInMap [EnvironmentVariables, !Ref Environment, SERVICECOOKIEDOMAIN ]
            - Name: IS_SESSION_FINISHED_POLLING_DURATION
              Value: !FindInMap [EnvironmentVariables, !Ref Environment, ISSESSIONFINISHEDPOLLINGDURATION]
            - Name: IS_SESSION_FINISHED_INTERVAL
              Value: !FindInMap [EnvironmentVariables, !Ref Environment, ISSESSIONFINISHEDINTERVAL ]
            - Name: SESSION_TIMEOUT
              Value: !FindInMap [EnvironmentVariables, !Ref Environment, SESSIONTIMEOUT ]
            - Name: NODE_ENV
              Value: !FindInMap [ EnvironmentVariables, !Ref Environment, NODEENV ]
            - Name: SUPPORT_FORM_LINK
              Value: !FindInMap [ EnvironmentVariables, !Ref Environment, SUPPORTFORMLINK ]
          PortMappings:
            - ContainerPort: !Ref ContainerPort
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group : !Ref ECSAccessLogsGroup
              awslogs-region : !Sub ${AWS::Region}
              awslogs-stream-prefix : !Sub dca-front-${Environment}
      Cpu: '1024' # Increased to use 1 CPU unit
      ExecutionRoleArn: !GetAtt ECSTaskExecutionRole.Arn
      Memory: '2048' # Upgraded memory value to match with increased CPU
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !GetAtt ECSTaskRole.Arn
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-TaskDefinitionV2"
        - Key: Product
          Value: "GOV.UK sign in"
        - Key: System
          Value: "DCA CRI"
        - Key: Environment
          Value: !Sub "${Environment}"

  ECSTaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: PullDCAFrontImage
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:BatchGetImage"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchCheckLayerAvailability"
                Resource:
                  - !FindInMap [ ECSConfiguration, !Ref Environment, FrontImageRepository ]
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !GetAtt "ECSAccessLogsGroup.Arn"
                  - !Sub "${ECSAccessLogsGroup.Arn}:*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  ECSTaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: 2012-10-17
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

# APIGW RESOURCES

  ApiGwHttpEndpoint:
      Type: 'AWS::ApiGatewayV2::Api'
      Properties:
        Name: !Sub dca-front-${Environment}-${AWS::StackName}
        Description: !Sub "Document Check Mobile And Web (DCMAW) Frontend API. ${AWS::StackName}"
        ProtocolType: HTTP

  ApiGwHttpEndpointIntegration:
      Type: 'AWS::ApiGatewayV2::Integration'
      Properties:
        ApiId: !Ref ApiGwHttpEndpoint
        IntegrationType: HTTP_PROXY
        ConnectionId:
          Fn::ImportValue:
            !Sub "${VpcStackName}-VpcLinkId"
        ConnectionType: VPC_LINK
        IntegrationMethod: ANY
        IntegrationUri: !Ref LoadBalancerListener
        PayloadFormatVersion: '1.0'
        RequestParameters:
          overwrite:header.x-govuk-signin-source-ip: $context.identity.sourceIp

  APIGWRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref ApiGwHttpEndpoint
      RouteKey: 'ANY /{proxy+}'
      Target: !Join
        - /
        - - integrations
          - !Ref ApiGwHttpEndpointIntegration

  APIStageDefault:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      ApiId: !Ref ApiGwHttpEndpoint
      StageName: $default
      AutoDeploy: true
      DefaultRouteSettings:
        DataTraceEnabled: false
        DetailedMetricsEnabled: true
        ThrottlingBurstLimit: 400
        ThrottlingRateLimit: 1200
      AccessLogSettings:
        DestinationArn: !GetAtt APIGWAccessLogsGroup.Arn
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip": "$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path": "$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLength":"$context.responseLength"
          }

  APIGWAccessLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-dcaFront-API-GW-AccessLogs

  FrontCustomDomain:
    Type: AWS::ApiGatewayV2::DomainName
    Properties:
      DomainName: !If
        - IsNotDevelopment
        - !FindInMap [ EnvironmentVariables, !Ref Environment, FEURL ]
        - !If
          - StackNameIsFrontendDev
          - !FindInMap [ EnvironmentVariables, !Ref Environment, FEURL ]
          - !Sub
            - "${AWS::StackName}-${FEURL}"
            - FEURL:
                !FindInMap [ EnvironmentVariables, !Ref Environment, FEURL ]
      DomainNameConfigurations:
        - CertificateArn: !Sub "{{resolve:ssm:/${Environment}/Platform/ACM/PrimaryZoneWildcardCertificateARN}}"
          EndpointType: REGIONAL
          SecurityPolicy: TLS_1_2

  FrontApiRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref FrontCustomDomain
      Type: A
      HostedZoneId: !Sub "{{resolve:ssm:/${Environment}/Platform/Route53/PrimaryZoneID}}"
      AliasTarget:
        DNSName: !GetAtt FrontCustomDomain.RegionalDomainName
        HostedZoneId: !GetAtt FrontCustomDomain.RegionalHostedZoneId
        EvaluateTargetHealth: false

  FrontApiMapping:
    DependsOn: APIStageDefault
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      DomainName: !Ref FrontCustomDomain
      ApiId: !Ref ApiGwHttpEndpoint
      Stage: !Ref APIStageDefault
