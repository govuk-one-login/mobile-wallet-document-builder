AWSTemplateFormatVersion: "2010-09-09"

Transform:
  - AWS::Serverless-2016-10-31
Description: >-
  Wallet Stub FE

Parameters:
  Environment:
    Description: "The environment type"
    Type: "String"
    Default: dev
    AllowedValues:
      - "dev"
      - "build"
  VpcStackName:
    Description: >
      The name of the stack that defines the VPC in which this container will
      run.
    Type: String
    Default: platform-vpc
  PermissionsBoundary:
    Description: "The ARN of the permissions boundary to apply when creating IAM roles"
    Type: String
    Default: "none"
  ContainerPort:
    Description: >
      The port on which the container is running
    Type: Number
    Default: 8000

Conditions:
  StackNameIsWalletDocBuilderFE: !Equals [ !Ref "AWS::StackName", wallet-doc-builder-fe ]

  IsBuild: !Equals [ !Ref Environment, build ]

  UsePermissionsBoundary:
    Fn::Not:
      - Fn::Equals:
          - !Ref PermissionsBoundary
          - "none"

Mappings:
  EnvironmentVariables:
    dev:
      BEURL: "example-credential-issuer.mobile.dev.account.gov.uk"
      FEURL: "stub-credential-issuer.mobile.dev.account.gov.uk"
      FrontImageRepository: arn:aws:ecr:eu-west-2:671524980203:repository/wallet-doc-builder-ecr-containerrepository-lhfhbk5ayzry
      DidController: "did:web:wallet-api.mobile.dev.account.gov.uk"
      OidcIssuerEndpoint: "https://oidc.integration.account.gov.uk"
    build:
      BEURL: "example-credential-issuer.mobile.build.account.gov.uk"
      FEURL: "stub-credential-issuer.mobile.build.account.gov.uk"
      FrontImageRepository: arn:aws:ecr:eu-west-2:497065468681:repository/wallet-doc-builder-ecr-containerrepository-zxs2g0lfhfsf
      DidController: "did:web:wallet-api.mobile.build.account.gov.uk"
      OidcIssuerEndpoint: "https://oidc.integration.account.gov.uk"
  # see https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-access-logs.html
  # PlatformConfiguration:
  #   dev:
  #     CSLSEGRESS: "This should not ever be set; the dev account is not configured to egress logs."
  #   build:
  #     CSLSEGRESS: arn:aws:logs:eu-west-2:885513274347:destination:csls_cw_logs_destination_prodpython
  ElasticLoadBalancerAccountIds:
    eu-west-2:
      AccountId: 652711504416

Resources:

# SECURITY GROUPS

  WalletFELoadBalancerSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: >-
        Wallet Stub Front LoadBalancer Security Group
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Fn::ImportValue:
          !Sub "${VpcStackName}-VpcId"

  WalletFELoadBalancerSGEgressToECSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroupEgress'
    Properties:
      GroupId: !GetAtt WalletFELoadBalancerSG.GroupId
      IpProtocol: tcp
      Description: >-
        Egress between the Wallet Stub FE Front load balancer and
        the Wallet Stub FE Front ECS security group
      DestinationSecurityGroupId: !GetAtt WalletFEECSSecurityGroup.GroupId
      FromPort: !Ref ContainerPort
      ToPort: !Ref ContainerPort

  WalletFEECSSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: >-
        Wallet Stub Front ECS Security Group permitting outbound
        to anywhere.
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          Description: Allow all outbound traffic by default
          IpProtocol: '-1'
      VpcId:
        Fn::ImportValue:
          !Sub "${VpcStackName}-VpcId"

  WalletFEECSSecurityGroupIngressFromLoadBalancer:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      IpProtocol: tcp
      Description: >-
        Wallet Stub FE ECS permits inbound from the Wallet Stub 
        Front load balancer.
      FromPort: !Ref ContainerPort
      ToPort: !Ref ContainerPort
      GroupId: !GetAtt WalletFEECSSecurityGroup.GroupId
      SourceSecurityGroupId: !GetAtt WalletFELoadBalancerSG.GroupId

# ACCESS LOGS

  WalletFEAPIGWAccessLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/apigateway/${AWS::StackName}-WalletFE-API-GW-AccessLogs
      RetentionInDays: 14

  WalletFEECSAccessLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/ecs/${AWS::StackName}-Wallet-Stub-Front-ECS
      RetentionInDays: 14

  WalletFEAccessLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub wallet-stub-front-${AWS::StackName}-${Environment}-access-logs
      VersioningConfiguration:
        Status: "Enabled"
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  WalletFEAccessLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WalletFEAccessLogsBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub
                - "arn:aws:iam::${ElbAccountId}:root"
                - ElbAccountId: !FindInMap [ ElasticLoadBalancerAccountIds, !Ref AWS::Region, AccountId ]
            Action:
              - s3:PutObject
            Resource:
              - !Sub arn:aws:s3:::${WalletFEAccessLogsBucket}/wallet-stub-front-${Environment}/AWSLogs/${AWS::AccountId}/*
          - Effect: Deny
            Sid: AllowSSLRequestsOnly
            Principal: "*"
            Action: s3:*
            Resource:
              - !Sub arn:aws:s3:::${WalletFEAccessLogsBucket}/wallet-stub-front-${Environment}/AWSLogs/${AWS::AccountId}/*
            Condition:
              Bool:
                  aws:SecureTransport": false

# LOADBALANCER RESOURCES

  WalletFELoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Scheme: internal
      SecurityGroups:
        - !GetAtt WalletFELoadBalancerSG.GroupId
      Subnets:
        - Fn::ImportValue:
            !Sub "${VpcStackName}-PrivateSubnetIdA"
        - Fn::ImportValue:
            !Sub "${VpcStackName}-PrivateSubnetIdB"
        - Fn::ImportValue:
            !Sub "${VpcStackName}-PrivateSubnetIdC"
      Type: application
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: true
        - Key: access_logs.s3.bucket
          Value: !Ref WalletFEAccessLogsBucket
        - Key: access_logs.s3.prefix
          Value: !Sub wallet-stub-front-${Environment}
        - Key: idle_timeout.timeout_seconds
          Value: 60 # N.B, this is 1 second less than the nodeJS app is configured in server.ts

  WalletFELoadBalancerListenerTargetGroupECS:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckEnabled: TRUE
      HealthCheckProtocol: HTTP
      Matcher:
        HttpCode: 200-499
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Fn::ImportValue:
          !Sub "${VpcStackName}-VpcId"
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 60

  WalletFELoadBalancerListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref WalletFELoadBalancerListenerTargetGroupECS
          Type: forward
      LoadBalancerArn: !Ref WalletFELoadBalancer
      Port: 80
      Protocol: HTTP

# APIGW RESOURCES

  WalletFEApiGwHttpEndpoint:
      Type: 'AWS::ApiGatewayV2::Api'
      Properties:
        Name: !Sub wallet-stub-front-${Environment}-${AWS::StackName}
        Description: !Sub "Wallet Stub Frontend API. ${AWS::StackName}"
        ProtocolType: HTTP

  WalletFEApiGwHttpEndpointIntegration:
      Type: 'AWS::ApiGatewayV2::Integration'
      Properties:
        ApiId: !Ref WalletFEApiGwHttpEndpoint
        IntegrationType: HTTP_PROXY
        ConnectionId:
          Fn::ImportValue:
            !Sub "${VpcStackName}-VpcLinkId"
        ConnectionType: VPC_LINK
        IntegrationMethod: ANY
        IntegrationUri: !Ref WalletFELoadBalancerListener
        PayloadFormatVersion: '1.0'
        RequestParameters:
          overwrite:header.x-govuk-signin-source-ip: $context.identity.sourceIp

  WalletFEAPIGWRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref WalletFEApiGwHttpEndpoint
      RouteKey: 'ANY /{proxy+}'
      Target: !Join
        - /
        - - integrations
          - !Ref WalletFEApiGwHttpEndpointIntegration

  WalletFEAPIStageDefault:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      ApiId: !Ref WalletFEApiGwHttpEndpoint
      StageName: $default
      AutoDeploy: true
      DefaultRouteSettings:
        DataTraceEnabled: false
        DetailedMetricsEnabled: true
        ThrottlingBurstLimit: 400
        ThrottlingRateLimit: 1200
      AccessLogSettings:
        DestinationArn: !GetAtt WalletFEAPIGWAccessLogsGroup.Arn
        Format: >-
          {
          "requestId":"$context.requestId",
          "ip": "$context.identity.sourceIp",
          "requestTime":"$context.requestTime",
          "httpMethod":"$context.httpMethod",
          "path": "$context.path",
          "routeKey":"$context.routeKey",
          "status":"$context.status",
          "protocol":"$context.protocol",
          "responseLength":"$context.responseLength"
          }

  WalletFEFrontCustomDomain:
    Type: AWS::ApiGatewayV2::DomainName
    Properties:
      DomainName: !If 
        - StackNameIsWalletDocBuilderFE
        - !FindInMap [ EnvironmentVariables, !Ref Environment, FEURL ]
        - !Sub
          - "${AWS::StackName}-${FEURL}"
          - FEURL:
              !FindInMap [ EnvironmentVariables, !Ref Environment, FEURL ]
      DomainNameConfigurations:
        - CertificateArn: !Sub "{{resolve:ssm:/${Environment}/Platform/ACM/PrimaryZoneWildcardCertificateARN}}"
          EndpointType: REGIONAL
          SecurityPolicy: TLS_1_2

  WalletFEFrontApiRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref WalletFEFrontCustomDomain
      Type: A
      HostedZoneId: !Sub "{{resolve:ssm:/${Environment}/Platform/Route53/PrimaryZoneID}}"
      AliasTarget:
        DNSName: !GetAtt WalletFEFrontCustomDomain.RegionalDomainName
        HostedZoneId: !GetAtt WalletFEFrontCustomDomain.RegionalHostedZoneId
        EvaluateTargetHealth: false

  WallFEFrontApiMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      DomainName: !Ref WalletFEFrontCustomDomain
      ApiId: !Ref WalletFEApiGwHttpEndpoint
      Stage: !Ref WalletFEAPIStageDefault

# ECS RESOURCES

  WalletFECluster:
    Type: 'AWS::ECS::Cluster'
    Properties:
      ClusterSettings:
        - Name: containerInsights
          Value: enabled
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-WalletECSCluster"
        - Key: Product
          Value: "GOV.UK sign in"
        - Key: System
          Value: "Wallet Stub FE"
        - Key: Environment
          Value: !Sub "${Environment}"

  WalletFEECSService:
    DependsOn:
      - WalletFELoadBalancerListener
    Type: 'AWS::ECS::Service'
    Properties:
      Cluster: !Ref WalletFECluster
      DeploymentConfiguration:
        DeploymentCircuitBreaker:
          Enable: TRUE
          Rollback: TRUE
      EnableECSManagedTags: false
      HealthCheckGracePeriodSeconds: 60
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: app
          ContainerPort: !Ref ContainerPort
          TargetGroupArn: !Ref WalletFELoadBalancerListenerTargetGroupECS
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !GetAtt WalletFEECSSecurityGroup.GroupId
          Subnets:
            - Fn::ImportValue:
                !Sub "${VpcStackName}-ProtectedSubnetIdA"
            - Fn::ImportValue:
                !Sub "${VpcStackName}-ProtectedSubnetIdB"
            - Fn::ImportValue:
                !Sub "${VpcStackName}-ProtectedSubnetIdC"
      TaskDefinition: !Ref WalletFEECSServiceTaskDefinition
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-WalletECS"
        - Key: Product
          Value: "GOV.UK sign in"
        - Key: System
          Value: "Wallet FE Stub"
        - Key: Environment
          Value: !Sub "${Environment}"

#  The ECR container for overriding in development, if you want to target a specific version/tag
#  for development use, change the value of the 'Image' property value to:
#  "671524980203.dkr.ecr.eu-west-2.amazonaws.com/wallet-doc-builder-ecr-containerrepository-lhfhbk5ayzry:<image_tag>"
#  To deploy the latest version of the image, use the git sha from the most recent commit, as the <image tag>, found using ‘git log’

  WalletFEECSServiceTaskDefinition:
    Type: 'AWS::ECS::TaskDefinition'
    Properties:
      ContainerDefinitions:
        - Essential: true
          Image: CONTAINER-IMAGE-PLACEHOLDER
          Name: app
          Environment:
            - Name: PORT
              Value: !Ref ContainerPort
            - Name: DOCUMENTS_TABLE_NAME
              Value: !Ref DocumentDatabase
            - Name: ENVIRONMENT
              Value: !Sub "${Environment}"
            - Name: MOCK_CRI_URL
              Value: !Sub 
                      - "https://${BEURL}"
                      - BEURL:
                          !FindInMap [ EnvironmentVariables, !Ref Environment, BEURL ]
            - Name: STS_SIGNING_KEY_ID
              Value: !Ref StsStubSigningKey
            - Name: ACCESS_TOKEN_TTL_IN_SECS
              Value: 180
            - Name: DID_CONTROLLER
              Value: !FindInMap [EnvironmentVariables, !Ref Environment, DidController]
            - Name: SELF
              Value: !Sub
                - "https://${FEURL}"
                - FEURL:
                    !FindInMap [ EnvironmentVariables, !Ref Environment, FEURL ]
            - Name: OIDC_CLIENT_ID
              Value: !Sub "{{resolve:ssm:/${AWS::StackName}/Config/OIDC/Client/Id}}"
            - Name: CLIENT_SIGNING_KEY_ID
              Value: !Ref ClientSigningKey
            - Name: OIDC_ISSUER_DISCOVERY_ENDPOINT
              Value: !FindInMap [ EnvironmentVariables, !Ref Environment, OidcIssuerEndpoint ]
            - Name: COOKIE_TTL_IN_SECS
              Value: 3600
          PortMappings:
            - ContainerPort: !Ref ContainerPort
              Protocol: tcp
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group : !Ref WalletFEECSAccessLogsGroup
              awslogs-region : !Sub ${AWS::Region}
              awslogs-stream-prefix : !Sub wallet-stub-front-${Environment}
      Cpu: '1024' # Increased to use 1 CPU unit
      ExecutionRoleArn: !GetAtt WalletFEECSTaskExecutionRole.Arn
      Memory: '2048' # Upgraded memory value to match with increased CPU
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      TaskRoleArn: !GetAtt WalletFEECSTaskRole.Arn
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-WalletTaskDefinition"
        - Key: Product
          Value: "GOV.UK sign in"
        - Key: System
          Value: "Wallet Stub FE"
        - Key: Environment
          Value: !Sub "${Environment}"

  WalletFEECSTaskExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: PullWalletFrontImage
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:BatchGetImage"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:BatchCheckLayerAvailability"
                Resource:
                  - !FindInMap [ EnvironmentVariables, !Ref Environment, FrontImageRepository ]
              - Effect: Allow
                Action:
                  - "ecr:GetAuthorizationToken"
                Resource:
                  - "*"
              - Effect: Allow
                Action:
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !GetAtt "WalletFEECSAccessLogsGroup.Arn"
                  - !Sub "${WalletFEECSAccessLogsGroup.Arn}:*"
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  WalletFEECSTaskRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
        Version: 2012-10-17
      Policies:
        - PolicyName: AccessDynamoDb
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:PutItem'
                  - 'dynamodb:GetItem'
                Resource: !GetAtt DocumentDatabase.Arn
              - Effect: Allow
                Action: 
                  - 'kms:Decrypt'
                  - 'kms:Encrypt'
                  - 'kms:GenerateDataKey'
                Resource: !GetAtt DocumentDatabaseKmsKey.Arn
      PermissionsBoundary: !If
        - UsePermissionsBoundary
        - !Ref PermissionsBoundary
        - !Ref AWS::NoValue

  # KMS RESOURCES

  StsStubSigningKey:
    Type: AWS::KMS::Key
    Properties:
      Description: ECC asymmetric key for signing tokens
      Enabled: true
      EnableKeyRotation: false
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - "kms:*"
            Resource:
              - "*"
          - Effect: Allow
            Principal:
              AWS: !GetAtt WalletFEECSTaskRole.Arn
            Action:
              - 'kms:Sign'
              - 'kms:GetPublicKey'
            Resource:
              - "*"
      KeySpec: ECC_NIST_P256
      KeyUsage: SIGN_VERIFY
      MultiRegion: false

  StsStubSigningKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/sts-stub-signing-key-${AWS::StackName}"
      TargetKeyId: !Ref StsStubSigningKey

  ClientSigningKey:
    Type: AWS::KMS::Key
    Properties:
      Description: RSA asymmetric key for signing tokens
      Enabled: true
      EnableKeyRotation: false
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action:
              - "kms:*"
            Resource:
              - "*"
          - Effect: Allow
            Principal:
              AWS: !GetAtt WalletFEECSTaskRole.Arn
            Action:
              - 'kms:Sign'
              - 'kms:GetPublicKey'
            Resource:
              - "*"
      KeySpec: RSA_2048
      KeyUsage: SIGN_VERIFY
      MultiRegion: false

  ClientSigningKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/client-assertion-signing-key-${AWS::StackName}"
      TargetKeyId: !Ref ClientSigningKey

  DocumentDatabaseKmsKey:
    Type: AWS::KMS::Key
    Properties:
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - kms:*
            Resource:
              - "*"

  DocumentDatabaseKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub "alias/${AWS::StackName}/${Environment}/DocumentDatabaseKmsKey"
      TargetKeyId: !Ref DocumentDatabaseKmsKey

  # DYNAMODB RESOURCES

  DocumentDatabase:
    Type: AWS::DynamoDB::Table
    DeletionPolicy: Delete
    UpdateReplacePolicy: Delete
    Properties:
      AttributeDefinitions:
        - AttributeName: documentId
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      TableName: documents
      KeySchema:
        - AttributeName: documentId
          KeyType: HASH
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      SSESpecification:
        SSEEnabled: true
        SSEType: KMS
        KMSMasterKeyId: !GetAtt DocumentDatabaseKmsKey.Arn
      Tags:
        - Key: Product
          Value: GOV.UK Sign In
        - Key: System
          Value: Mobile Wallet
        - Key: Owner
          Value: Mobile Wallet Team
        - Key: Environment
          Value: !Ref "Environment"

# WAF ASSOCIATION

  DocBuilderWebAclAssociation:
      Type: AWS::WAFv2::WebACLAssociation
      Properties:
        ResourceArn: !Ref WalletFELoadBalancer
        WebACLArn: !Sub "{{resolve:ssm:/${Environment}/Platform/Security/WafArn}}"

# ALARMS

  DocBuilderLowContainerTaskCountAlarm:
    Condition: IsBuild
    DependsOn:
       - WalletFECluster
       - WalletFEECSService
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-DocBuilderLowContainerTaskCountAlarm"
      AlarmDescription: Trigger a warning if the running container task count drops below 1
      ActionsEnabled: false
      # OKActions: - commented until we create sns topics for wallet alarms
      #   - !ImportValue platform-alarm-topic-critical-alert
      # AlarmActions:
      #   - !ImportValue platform-alarm-topic-critical-alert
      InsufficientDataActions: []
      Dimensions: []
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 1
      ComparisonOperator: LessThanThreshold
      TreatMissingData: breaching
      Metrics:
        - Id: containerTaskCount
          ReturnData: true
          MetricStat:
            Metric:
              Namespace: ECS/ContainerInsights
              MetricName: RunningTaskCount
              Dimensions:
                - Name: ClusterName
                  Value: !Ref WalletFECluster
                - Name: ServiceName
                  Value: !GetAtt WalletFEECSService.Name
            Period: 60
            Stat: Minimum

  BE5XXErrorAlarm:
    Condition: IsBuild
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-BE5XXErrorAlarm"
      AlarmDescription: Trigger the alarm if errorThreshold exceeds 50% with a minimum of 5 invocations in the last 30 minutes
      ActionsEnabled: false
      # OKActions:
      #   - !ImportValue platform-alarm-topic-slack-warning-alert
      # AlarmActions:
      #   - !ImportValue platform-alarm-topic-slack-warning-alert
      InsufficientDataActions: [ ]
      Dimensions: [ ]
      EvaluationPeriods: 1
      DatapointsToAlarm: 1
      Threshold: 50
      ComparisonOperator: GreaterThanOrEqualToThreshold
      TreatMissingData: notBreaching
      Metrics:
        - Id: errorThreshold
          Label: errorThreshold
          ReturnData: true
          Expression: IF(invocations<5,0,errorPercentage)
        - Id: invocations
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: Count
              Dimensions:
                - Name: ApiId
                  Value: !Ref WalletFEApiGwHttpEndpoint
            Period: 1800
            Stat: Sum
        - Id: error
          ReturnData: false
          MetricStat:
            Metric:
              Namespace: AWS/ApiGateway
              MetricName: 5xx
              Dimensions:
                - Name: ApiId
                  Value: !Ref WalletFEApiGwHttpEndpoint
            Period: 1800
            Stat: Sum
        - Id: errorPercentage
          Label: errorPercentage
          ReturnData: false
          Expression: (error/invocations) * 100