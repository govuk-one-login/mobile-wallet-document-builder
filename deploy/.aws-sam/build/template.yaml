AWSTemplateFormatVersion: '2010-09-09'
Transform:
- AWS::Serverless-2016-10-31
Description: Wallet Stub FE
Parameters:
  Environment:
    Description: The environment type
    Type: String
    Default: dev
    AllowedValues:
    - dev
    - build
    - staging
  VpcStackName:
    Description: 'The name of the stack that defines the VPC in which this container
      will run.

      '
    Type: String
    Default: platform-vpc
  ContainerPort:
    Description: 'The port on which the container is running

      '
    Type: Number
    Default: 8000
Mappings:
  ECSConfiguration:
    dev:
      FrontImageRepository: TBC
    build:
      FrontImageRepository: TBC
    staging:
      FrontImageRepository: TBC
    integration:
      FrontImageRepository: TBC
    production:
      FrontImageRepository: TBC
  ElasticLoadBalancerAccountIds:
    eu-west-2:
      AccountId: 652711504416
Resources:
  WalletFELoadBalancerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Wallet Stub Front LoadBalancer Security Group
      SecurityGroupIngress:
      - CidrIp: '0.0.0.0/0'
        Description: Allow from anyone on port 80
        FromPort: 80
        IpProtocol: tcp
        ToPort: 80
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${VpcStackName}-VpcId
  WalletFELoadBalancerSGEgressToECSSecurityGroup:
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      GroupId:
        Fn::GetAtt:
        - WalletFELoadBalancerSG
        - GroupId
      IpProtocol: tcp
      Description: Egress between the Wallet Stub FE Front load balancer and the Wallet
        Stub FE Front ECS security group
      DestinationSecurityGroupId:
        Fn::GetAtt:
        - WalletFEECSSecurityGroup
        - GroupId
      FromPort:
        Ref: ContainerPort
      ToPort:
        Ref: ContainerPort
  WalletFEECSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Wallet Stub Front ECS Security Group permitting outbound to
        anywhere.
      SecurityGroupEgress:
      - CidrIp: '0.0.0.0/0'
        Description: Allow all outbound traffic by default
        IpProtocol: '-1'
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${VpcStackName}-VpcId
  WalletFEECSSecurityGroupIngressFromLoadBalancer:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      Description: Wallet Stub FE ECS permits inbound from the Wallet Stub  Front
        load balancer.
      FromPort:
        Ref: ContainerPort
      ToPort:
        Ref: ContainerPort
      GroupId:
        Fn::GetAtt:
        - WalletFEECSSecurityGroup
        - GroupId
      SourceSecurityGroupId:
        Fn::GetAtt:
        - WalletFELoadBalancerSG
        - GroupId
  WalletFEAccessLogsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: wallet-stub-front-${Environment}-access-logs
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
        - ServerSideEncryptionByDefault:
            SSEAlgorithm: AES256
  WalletFEAccessLogsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: WalletFEAccessLogsBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            AWS:
              Fn::Sub:
              - arn:aws:iam::${ElbAccountId}:root
              - ElbAccountId:
                  Fn::FindInMap:
                  - ElasticLoadBalancerAccountIds
                  - Ref: AWS::Region
                  - AccountId
          Action:
          - s3:PutObject
          Resource:
          - Fn::Sub: arn:aws:s3:::${WalletFEAccessLogsBucket}/wallet-stub-front-${Environment}/AWSLogs/${AWS::AccountId}/*
  WalletFELoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internal
      SecurityGroups:
      - Fn::GetAtt:
        - WalletFELoadBalancerSG
        - GroupId
      Subnets:
      - Fn::ImportValue:
          Fn::Sub: ${VpcStackName}-PrivateSubnetIdA
      - Fn::ImportValue:
          Fn::Sub: ${VpcStackName}-PrivateSubnetIdB
      - Fn::ImportValue:
          Fn::Sub: ${VpcStackName}-PrivateSubnetIdC
      Type: application
      LoadBalancerAttributes:
      - Key: access_logs.s3.enabled
        Value: true
      - Key: access_logs.s3.bucket
        Value:
          Ref: WalletFEAccessLogsBucket
      - Key: access_logs.s3.prefix
        Value:
          Fn::Sub: wallet-stub-front-${Environment}
      - Key: idle_timeout.timeout_seconds
        Value: 60
  WalletFELoadBalancerListenerTargetGroupECS:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: true
      HealthCheckProtocol: HTTP
      Matcher:
        HttpCode: 200-499
      Port: 80
      Protocol: HTTP
      TargetType: ip
      VpcId:
        Fn::ImportValue:
          Fn::Sub: ${VpcStackName}-VpcId
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: 60
  WalletFELoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - TargetGroupArn:
          Ref: WalletFELoadBalancerListenerTargetGroupECS
        Type: forward
      LoadBalancerArn:
        Ref: WalletFELoadBalancer
      Port: 80
      Protocol: HTTP
  WalletFEApiGwHttpEndpoint:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name:
        Fn::Sub: wallet-stub-front-${Environment}-${AWS::StackName}
      Description:
        Fn::Sub: Wallet Stub Frontend API. ${AWS::StackName}
      ProtocolType: HTTP
  WalletFEApiGwHttpEndpointIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: WalletFEApiGwHttpEndpoint
      IntegrationType: HTTP_PROXY
      ConnectionId:
        Fn::ImportValue:
          Fn::Sub: ${VpcStackName}-VpcLinkId
      ConnectionType: VPC_LINK
      IntegrationMethod: ANY
      IntegrationUri:
        Ref: WalletFELoadBalancerListener
      PayloadFormatVersion: '1.0'
      RequestParameters:
        overwrite:header.x-govuk-signin-source-ip: $context.identity.sourceIp
  WalletFEAPIGWRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: WalletFEApiGwHttpEndpoint
      RouteKey: ANY /{proxy+}
      Target:
        Fn::Join:
        - /
        - - integrations
          - Ref: WalletFEApiGwHttpEndpointIntegration
  WalletFEAPIStageDefault:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: WalletFEApiGwHttpEndpoint
      StageName: $default
      AutoDeploy: true
      DefaultRouteSettings:
        DataTraceEnabled: false
        DetailedMetricsEnabled: true
        ThrottlingBurstLimit: 400
        ThrottlingRateLimit: 1200
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
          - WalletFEAPIGWAccessLogsGroup
          - Arn
        Format: '{ "requestId":"$context.requestId", "ip": "$context.identity.sourceIp",
          "requestTime":"$context.requestTime", "httpMethod":"$context.httpMethod",
          "path": "$context.path", "routeKey":"$context.routeKey", "status":"$context.status",
          "protocol":"$context.protocol", "responseLength":"$context.responseLength"
          }'
  WalletFEAPIGWAccessLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Sub: /aws/apigateway/${AWS::StackName}-WalletFE-API-GW-AccessLogs
  WalletFEFrontCustomDomain:
    Type: AWS::ApiGatewayV2::DomainName
    Properties:
      DomainName:
        Fn::Sub: stub-credential-issuer.mobile.${Environment}.account.gov.uk
      DomainNameConfigurations:
      - CertificateArn:
          Fn::Sub: '{{resolve:ssm:/${Environment}/Platform/ACM/PrimaryZoneWildcardCertificateARN}}'
        EndpointType: REGIONAL
        SecurityPolicy: TLS_1_2
  WalletFEFrontApiRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      Name:
        Ref: WalletFEFrontCustomDomain
      Type: A
      HostedZoneId:
        Fn::Sub: '{{resolve:ssm:/${Environment}/Platform/Route53/PrimaryZoneID}}'
      AliasTarget:
        DNSName:
          Fn::GetAtt:
          - WalletFEFrontCustomDomain
          - RegionalDomainName
        HostedZoneId:
          Fn::GetAtt:
          - WalletFEFrontCustomDomain
          - RegionalHostedZoneId
        EvaluateTargetHealth: false
  WallFEFrontApiMapping:
    Type: AWS::ApiGatewayV2::ApiMapping
    Properties:
      DomainName:
        Ref: WalletFEFrontCustomDomain
      ApiId:
        Ref: WalletFEApiGwHttpEndpoint
      Stage:
        Ref: WalletFEAPIStageDefault
